<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:security="http://www.springframework.org/schema/security"
         xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
                             http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">

    <http auto-config="true" >
        <csrf disabled="true"/>
        <intercept-url pattern="/posts/**"
                       access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/"
                                access="permitAll" />
<http-basic/>
    </http>


    <!-- Fixed Username and Password
    <user-service>
        <user name="user" password="{noop}password" authorities="ROLE_USER" />
    </user-service>
    -->

    <b:bean id="dataSource" class="com.mysql.cj.jdbc.MysqlDataSource">
        <b:property name="url" value="jdbc:mysql://localhost:3306/final_lab_task-1?useSSL=false&amp;serverTimezone=UTC"/> <!-- Updated database name and added timezone configuration -->
        <b:property name="user" value="root"/> <!-- Replace with actual username -->
        <b:property name="password" value="1234"/> <!-- Replace with actual password -->
    </b:bean>

    <b:bean id="noOpPasswordEncoder"
            class="org.springframework.security.crypto.password.NoOpPasswordEncoder">
    </b:bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="
        SELECT Email, Password, enabled
        FROM users
        WHERE Email = ?"
                    authorities-by-username-query="
        SELECT u.Email, r.name
        FROM `user_has-roles` ur
        INNER JOIN roles r ON r.id = ur.role_id
        INNER JOIN users u ON u.id = ur.user_id
        WHERE u.Email = ?"
            />
            <security:password-encoder ref="noOpPasswordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>

</b:beans>